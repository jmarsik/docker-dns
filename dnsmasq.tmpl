{{ $dns_root_envvar := .Env.DNS_ROOT }}{{/*
*/}}{{ $dns_root := or $dns_root_envvar "docker.local" }}{{/*
*/}}{{ $dns_env_envvar := .Env.DNS_ENV }}{{/*
*/}}{{ $dns_env := or $dns_env_envvar "" }}{{/*
*/}}{{ $dns_forwarder_envvar := .Env.DNS_FORWARDER }}{{/*
*/}}{{ $dns_forwarder := or $dns_forwarder_envvar "8.8.8.8" }}
# global settings

auth-server={{ $dns_root }},docker0
log-facility=-
{{ if eq .Env.DNS_LOG_QUERIES "1" }}log-queries{{ end }}
domain={{ $dns_root }}
auth-zone={{ $dns_root }},docker0
no-hosts
no-resolv
domain-needed
bogus-priv
all-servers
server={{ $dns_forwarder_envvar }}
{{ if .Env.DNS_AUTH_TTL }}auth-ttl={{ .Env.DNS_AUTH_TTL }}{{ end }}

# autogenerated hosts starts here
# remarks:
# - first host-record also creates associated PTR record for specified IP address to the first name specified
#   (the PTR record will therefore return container name without domain)

{{ range $name, $container := groupBy $ ".Name" }}{{/*
  */}}{{ $container := first $container }}{{/*
  */}}{{/* $name */}}{{/*
  */}}{{/* jsonPretty $container */}}{{/*
  */}}{{ with $address := first $container.Addresses }}{{/*
    */}}{{/* $hostname := $container.Hostname */}}{{/*
    */}}{{ $hostname := $name }}{{/*
    */}}{{ $internal_ip := $address.IP }}
# container with name {{ $name }}, hostname {{ $hostname }}, IP {{ $internal_ip }}
host-record={{ $name }},{{ $name }}.{{$dns_root}},{{ $internal_ip }}{{/*
    */}}{{ if ne $hostname $name }}
# cname={{ $hostname }},{{ $name }}{{/*
    */}}{{ end }}{{/*
    */}}{{ if $dns_env }}
cname={{ $name }}.{{ $dns_env }}.{{ $dns_root }},{{ $name }}
cname={{ $name }}.{{ $container.Image.Repository }}.{{ $dns_env }}.{{ $dns_root }},{{ $name }}{{/*
    */}}{{ end }}
# {{ $container.Image.Registry }} {{ $container.Image.Repository }} {{ $container.Image.Tag }}
# cname={{ if gt (len $container.ID) 12 }}{{ $container.ID }}{{ else }}{{ $container.ID }}{{ end }},{{ $hostname }}{{/*
  */}}{{ end }}
{{ end }}

# autogenerated hosts ends here
